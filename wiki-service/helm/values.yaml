replicaCount: 3

image:
  repository: your-docker-registry/analitik-service-backend
  tag: latest
  pullPolicy: Always

nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true
  annotations: {}
  name: ""

podAnnotations: {}

podSecurityContext:
  fsGroup: 2000

securityContext:
  capabilities:
    drop:
    - ALL
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 1000

service:
  type: ClusterIP
  port: 8000

ingress:
  enabled: true
  className: "nginx"
  annotations:
    kubernetes.io/ingress.class: nginx
  hosts:
    - host: analitik.meerkat-code.com
      paths:
        - path: /
          pathType: Prefix
  tls:
   - secretName: meerkat-tls
     hosts:
       - analitik.meerkat-code.com

resources:
  limits:
    cpu: 1
    memory: 1Gi
  requests:
    cpu: 500m
    memory: 512Mi

autoscaling:
  enabled: true
  minReplicas: 3
  maxReplicas: 10
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity:
  podAntiAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
    - weight: 100
      podAffinityTerm:
        labelSelector:
          matchExpressions:
          - key: app.kubernetes.io/name
            operator: In
            values:
            - analitik-service-backend
        topologyKey: "kubernetes.io/hostname"

persistence:
  enabled: true
  storageClass: "local-path"
  accessMode: ReadWriteMany
  size: 5Gi

env:
  DEBUG: "False"
  SECRET_KEY: "your-secret-key"
  DB_ENGINE: "django.db.backends.postgresql"
  DB_NAME: "your_db_name"
  DB_USER: "your_db_user"
  DB_PASS: "your_db_password"
  DB_HOST: "acid-postgres-cluster.postgres-cluster.svc.cluster.local"
  DB_PORT: "5432"
  ALLOWED_HOSTS: "demo.meerkat-code.com,192.168.0.0/16,10.96.0.0/12,*.svc.cluster.local,localhost,127.0.0.1"